#!/usr/bin/python

import os
from dotenv import load_dotenv
import telebot
from random import randrange
# import mysql.connector
from service.DBService import DBService

# db = mysql.connector.connect(
#     host="mysql",
#     user="homestead",
#     password="homestead",
#     database="homestead"
# )

dbService = DBService()

load_dotenv()

bot_token = os.getenv('BOT_TOKEN')
bot_name = os.getenv('BOT_NAME')
bot = telebot.TeleBot(bot_token)

card_names = (
'—à—É—Ç', #0
'–º–∞–≥',#1
'–∂—Ä–∏—Ü–∞', #2
'–∏–º–ø–µ—Ä–∞—Ç—Ä–∏—Ü–∞', #3
'–∏–º–ø–µ—Ä–∞—Ç–æ—Ä', #4
'–∂—Ä–µ—Ü', #5
'–≤–ª—é–±–ª—ë–Ω—ã–µ', #6
'–∫–æ–ª–µ—Å–Ω–∏—Ü–∞', #7
'—Å–∏–ª–∞', #8
'–æ—Ç—à–µ–ª—å–Ω–∏–∫', #9
'—Ñ–æ—Ä—Ç—É–Ω–∞', #10
'—Å–ø—Ä–∞–≤–µ–¥–ª–∏–≤–æ—Å—Ç—å', #11
'–ø–æ–≤–µ—à–µ–Ω–Ω—ã–π', #12
'—Å–º–µ—Ä—Ç—å', #13
'—É–º–µ—Ä–µ–Ω–Ω–æ—Å—Ç—å', #14
'–¥—å—è–≤–æ–ª', #15
'–±–∞—à–Ω—è', #16
'–∑–≤–µ–∑–¥–∞', #17
'–ª—É–Ω–∞', #18
'—Å–æ–ª–Ω—Ü–µ', #19
'—Å—É–¥', #20
'–º–∏—Ä', #21

'—Ç—É–∑ –∂–µ–∑–ª–æ–≤', #22
'–¥–≤–æ–π–∫–∞ –∂–µ–∑–ª–æ–≤', #23
'—Ç—Ä–æ–π–∫–∞ –∂–µ–∑–ª–æ–≤', #24
'—á–µ—Ç–≤–µ—Ä–∫–∞ –∂–µ–∑–ª–æ–≤', #25
'–ø—è—Ç–µ—Ä–∫–∞ –∂–µ–∑–ª–æ–≤', #26
'—à–µ—Å—Ç–µ—Ä–∫–∞ –∂–µ–∑–ª–æ–≤', #27
'—Å–µ–º–µ—Ä–∫–∞ –∂–µ–∑–ª–æ–≤', #28
'–≤–æ—Å—å–º–µ—Ä–∫–∞ –∂–µ–∑–ª–æ–≤', #29
'–¥–µ–≤—è—Ç–∫–∞ –∂–µ–∑–ª–æ–≤', #30
'–¥–µ—Å—è—Ç–∫–∞ –∂–µ–∑–ª–æ–≤', #31
'–ø–∞–∂ –∂–µ–∑–ª–æ–≤', #32
'—Ä—ã—Ü–∞—Ä—å –∂–µ–∑–ª–æ–≤', #33
'–∫–æ—Ä–æ–ª–µ–≤–∞ –∂–µ–∑–ª–æ–≤', #34
'–∫–æ—Ä–æ–ª—å –∂–µ–∑–ª–æ–≤', #35

'—Ç—É–∑ –ø–µ–Ω—Ç–∞–∫–ª–µ–π', #36
'–¥–≤–æ–π–∫–∞ –ø–µ–Ω—Ç–∞–∫–ª–µ–π', #37
'—Ç—Ä–æ–π–∫–∞ –ø–µ–Ω—Ç–∞–∫–ª–µ–π', #38
'—á–µ—Ç–≤–µ—Ä–∫–∞ –ø–µ–Ω—Ç–∞–∫–ª–µ–π', #39
'–ø—è—Ç–µ—Ä–∫–∞ –ø–µ–Ω—Ç–∞–∫–ª–µ–π', #40
'—à–µ—Å—Ç–µ—Ä–∫–∞ –ø–µ–Ω—Ç–∞–∫–ª–µ–π', #41
'—Å–µ–º–µ—Ä–∫–∞ –ø–µ–Ω—Ç–∞–∫–ª–µ–π', #42
'–≤–æ—Å—å–º–µ—Ä–∫–∞ –ø–µ–Ω—Ç–∞–∫–ª–µ–π', #43
'–¥–µ–≤—è—Ç–∫–∞ –ø–µ–Ω—Ç–∞–∫–ª–µ–π', #44
'–¥–µ—Å—è—Ç–∫–∞ –ø–µ–Ω—Ç–∞–∫–ª–µ–π', #45
'–ø–∞–∂ –ø–µ–Ω—Ç–∞–∫–ª–µ–π', #46 
'—Ä—ã—Ü–∞—Ä—å –ø–µ–Ω—Ç–∞–∫–ª–µ–π', #47
'–∫–æ—Ä–æ–ª–µ–≤–∞ –ø–µ–Ω—Ç–∞–∫–ª–µ–π', #48
'–∫–æ—Ä–æ–ª—å –ø–µ–Ω—Ç–∞–∫–ª–µ–π', #49

'—Ç—É–∑ –∫—É–±–∫–æ–≤', #50
'–¥–≤–æ–π–∫–∞ –∫—É–±–∫–æ–≤', #51
'—Ç—Ä–æ–π–∫–∞ –∫—É–±–∫–æ–≤', #52
'—á–µ—Ç–≤–µ—Ä–∫–∞ –∫—É–±–∫–æ–≤', #53
'–ø—è—Ç–µ—Ä–∫–∞ –∫—É–±–∫–æ–≤', #54
'—à–µ—Å—Ç–µ—Ä–∫–∞ –∫—É–±–∫–æ–≤', #55
'—Å–µ–º–µ—Ä–∫–∞ –∫—É–±–∫–æ–≤', #56
'–≤–æ—Å—å–º–µ—Ä–∫–∞ –∫—É–±–∫–æ–≤', #57
'–¥–µ–≤—è—Ç–∫–∞ –∫—É–±–∫–æ–≤', #58
'–¥–µ—Å—è—Ç–∫–∞ –∫—É–±–∫–æ–≤', #59
'–ø–∞–∂ –∫—É–±–∫–æ–≤', #60
'—Ä—ã—Ü–∞—Ä—å –∫—É–±–∫–æ–≤', #61
'–∫–æ—Ä–æ–ª–µ–≤–∞ –∫—É–±–∫–æ–≤', #62
'–∫–æ—Ä–æ–ª—å –∫—É–±–∫–æ–≤', #63

'—Ç—É–∑ –º–µ—á–µ–π', #64
'–¥–≤–æ–π–∫–∞ –º–µ—á–µ–π', #65
'—Ç—Ä–æ–π–∫–∞ –º–µ—á–µ–π', #66
'—á–µ—Ç–≤–µ—Ä–∫–∞ –º–µ—á–µ–π', #67
'–ø—è—Ç–µ—Ä–∫–∞ –º–µ—á–µ–π', #68
'—à–µ—Å—Ç–µ—Ä–∫–∞ –º–µ—á–µ–π', #69
'—Å–µ–º–µ—Ä–∫–∞ –º–µ—á–µ–π', #70
'–≤–æ—Å—å–º–µ—Ä–∫–∞ –º–µ—á–µ–π', #71
'–¥–µ–≤—è—Ç–∫–∞ –º–µ—á–µ–π', #72
'–¥–µ—Å—è—Ç–∫–∞ –º–µ—á–µ–π', #73
'–ø–∞–∂ –º–µ—á–µ–π', #74
'—Ä—ã—Ü–∞—Ä—å –º–µ—á–µ–π', #75
'–∫–æ—Ä–æ–ª–µ–≤–∞ –º–µ—á–µ–π', #76
'–∫–æ—Ä–æ–ª—å –º–µ—á–µ–π', #77
)

def send_prediction(bot, message):
    card_numbers = []
    while (len(card_numbers) < 3):
        card_number = randrange(77)
        if card_number not in card_numbers:
            card_numbers.append(card_number)

    msg =  "–í–æ—Ç —Ä–∞—Å–∫–ª–∞–¥ –¥–ª—è —Ç–µ–±—è ‚ú®\n\n"
    order = 0
    for card_number in card_numbers:
        file = open(f'tarot_cards/{card_number}.webp', 'rb')
        bot.send_sticker(message.chat.id, file, reply_to_message_id=message.message_id)
        order += 1
        msg =  msg + str(order) + '. ' + card_names[card_number].capitalize() + "\n"
    msg += "\n" + "‚ú®‚ú®‚ú®‚ú®‚ú®‚ú®‚ú®‚ú®" 
    bot.send_message(message.chat.id, msg, reply_to_message_id=message.message_id)

# –æ–±–Ω–æ–≤–ª—è–µ—Ç –¥–∞—Ç—É –ø–æ—Å–ª–µ–¥–Ω–µ–≥–æ –ø—Ä–µ–¥—Å–∫–∞–∑–∞–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é –ø–æ id –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
# def update_user_last_prediction_at(db, user_id):
#     cursor = db.cursor()
#     query = "UPDATE users SET last_prediction_at = now() WHERE telegram_id = '%s';"
#     cursor.execute(query, (user_id, ))
#     db.commit()

# –¥–æ–±–∞–≤–ª—è–µ—Ç –Ω–æ–≤–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ –±–¥ —Å –¥–∞—Ç–æ–π –ø—Ä–µ–¥—Å–∫–∞–∑–∞–Ω–∏—è
# def DBService.save_user(db, user_id):
#     cursor = db.cursor()
#     query = "INSERT INTO users (telegram_id, last_prediction_at) VALUES (%s, now())"
#     cursor.execute(query, (user_id, ))
#     db.commit()

# –æ—Ç–¥–∞–µ—Ç –æ—Ç–≤–µ—Ç –Ω–∞ –≤–æ–ø—Ä–æ—Å "–ø—Ä–æ—à–ª–æ –ª–∏ 24 —á–∞—Å–∞ —Å –º–æ–º–µ–Ω—Ç–∞ –ø–æ—Å–ª–µ–¥–Ω–µ–≥–æ –ø—Ä–µ–¥—Å–∫–∞–∑–∞–Ω–∏—è –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –µ—Å–ª–∏ –æ–Ω –±—ã–ª"
# def get_diff(db, user_id):
#     cursor = db.cursor()
#     query = "SELECT ((UNIX_TIMESTAMP(now()) - UNIX_TIMESTAMP(users.last_prediction_at)) > 60 * 60 *24) as diff FROM users WHERE telegram_id = %s"
#     cursor.execute(query, (user_id, ))
#     result = cursor.fetchone()
#     db.commit()
#     return result

# —Ä–∞—Å–∫–ª–∞–¥
@bot.message_handler(func=lambda message: message.text and bot_name in message.text)
@bot.message_handler(regexp='[—Ä–†][–∞–ê][—Å–°][–∫–ö][–ª–õ][–∞–ê][–¥–î]')
def get_prediction(message):
    user_id = message.from_user.id
    status = dbService.check_user_data(user_id)
    if status == 'user_not_found':
        send_prediction(bot, message)
        dbService.save_new_user(user_id)
    if status == 'allowed_to_predict':
        send_prediction(bot, message)
        dbService.update_user_last_prediction_at(user_id)
    
    if status == 'not_allowed_to_predict':
        msg = '–ö–æ–ª–æ–¥–µ –Ω—É–∂–Ω–æ –æ—Ç–¥–æ—Ö–Ω—É—Ç—å üòå'
        bot.send_message(message.chat.id, msg, reply_to_message_id=message.message_id)

bot.infinity_polling()